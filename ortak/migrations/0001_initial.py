# Generated by Django 5.2 on 2025-04-24 11:23

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Il',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('ad', models.CharField(help_text='İl adı giriniz.', max_length=50, unique=True, verbose_name='İl Adı')),
                ('plaka_kodu', models.IntegerField(error_messages={'unique': 'Bu plaka kodu zaten mevcut.'}, help_text='Plaka kodu giriniz.', unique=True, verbose_name='Plaka Kodu')),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(help_text='İl sınırlarını belirten geometri alanı.', srid=5256, verbose_name='Geometri')),
                ('alan', models.FloatField(blank=True, default=0, help_text='İl alanını giriniz.', null=True, verbose_name='Alan')),
                ('cevre', models.FloatField(blank=True, default=0, help_text='İl çevresini giriniz.', null=True, verbose_name='Çevre')),
                ('extra_data', models.JSONField(blank=True, help_text='İl ile ilgili ekstra verileri JSON formatında giriniz.', null=True, verbose_name='Ekstra Veri')),
                ('osm_id', models.CharField(help_text="OpenStreetMap'den alınan benzersiz kimlik.", max_length=50, unique=True, verbose_name='OSM ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'İl',
                'verbose_name_plural': 'İller',
                'db_table': '"ortak"."iller"',
                'ordering': ['ad'],
            },
        ),
        migrations.CreateModel(
            name='Ilce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('ad', models.CharField(help_text='İlçe adı giriniz.', max_length=50, verbose_name='İlçe Adı')),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(help_text='İlçe sınırlarını belirten geometri alanı.', srid=5256)),
                ('alan', models.FloatField(blank=True, default=0, help_text='İlçe alanını giriniz.', null=True, verbose_name='Alan')),
                ('cevre', models.FloatField(blank=True, default=0, help_text='İlçe çevresini giriniz.', null=True, verbose_name='Çevre')),
                ('extra_data', models.JSONField(blank=True, help_text='İlçe ile ilgili ekstra verileri JSON formatında giriniz.', null=True, verbose_name='Ekstra Veri')),
                ('osm_id', models.CharField(help_text="OpenStreetMap'den alınan benzersiz kimlik.", max_length=50, unique=True, verbose_name='OSM ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('il', models.ForeignKey(help_text='İl seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='ilceler', to='ortak.il', verbose_name='İl')),
            ],
            options={
                'verbose_name': 'İlçe',
                'verbose_name_plural': 'İlçeler',
                'db_table': '"ortak"."ilceler"',
                'ordering': ['il__ad', 'ad'],
            },
        ),
        migrations.CreateModel(
            name='Mahalle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('ad', models.CharField(help_text='Mahalle adı giriniz.', max_length=50, verbose_name='Mahalle Adı')),
                ('muhtar', models.CharField(blank=True, help_text='Muhtar adı giriniz.', max_length=50, null=True, verbose_name='Muhtar Adı')),
                ('muhtar_telefon', models.CharField(blank=True, help_text='Muhtar telefonunu giriniz.', max_length=15, null=True, verbose_name='Muhtar Telefonu')),
                ('muhtar_email', models.EmailField(blank=True, help_text='Muhtar e-posta adresini giriniz.', max_length=254, null=True, verbose_name='Muhtar E-posta')),
                ('muhtar_adres', models.CharField(blank=True, help_text='Muhtar adresini giriniz.', max_length=255, null=True, verbose_name='Muhtar Adresi')),
                ('nufus', models.IntegerField(blank=True, default=0, help_text='Mahalle nüfusunu giriniz.', null=True, verbose_name='Nüfus')),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(help_text='Mahalle sınırlarını belirten geometri alanı.', srid=5256)),
                ('alan', models.FloatField(blank=True, default=0, help_text='Mahalle alanını giriniz.', null=True, verbose_name='Alan')),
                ('cevre', models.FloatField(blank=True, default=0, help_text='Mahalle çevresini giriniz.', null=True, verbose_name='Çevre')),
                ('extra_data', models.JSONField(blank=True, help_text='Mahalle ile ilgili ekstra verileri JSON formatında giriniz.', null=True, verbose_name='Ekstra Veri')),
                ('osm_id', models.CharField(help_text="OpenStreetMap'den alınan benzersiz kimlik.", max_length=50, unique=True, verbose_name='OSM ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('ilce', models.ForeignKey(help_text='İlçe seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='mahalleler', to='ortak.ilce', verbose_name='İlçe')),
            ],
            options={
                'verbose_name': 'Mahalle',
                'verbose_name_plural': 'Mahalleler',
                'db_table': '"ortak"."mahalleler"',
                'ordering': ['ilce__il__ad', 'ilce__ad', 'ad'],
            },
        ),
        migrations.CreateModel(
            name='Ada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('pafta_no', models.CharField(help_text='Pafta numarasını giriniz.', max_length=50, verbose_name='Pafta No')),
                ('ada_no', models.CharField(help_text='Ada numarasını giriniz.', max_length=50, verbose_name='Ada No')),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(help_text='Ada sınırlarını belirten geometri alanı.', srid=5256)),
                ('alan', models.FloatField(blank=True, default=0, help_text='Ada alanını giriniz.', null=True, verbose_name='Alan')),
                ('cevre', models.FloatField(blank=True, default=0, help_text='Ada çevresini giriniz.', null=True, verbose_name='Çevre')),
                ('extra_data', models.JSONField(blank=True, help_text='Ada ile ilgili ekstra verileri JSON formatında giriniz.', null=True, verbose_name='Ekstra Veri')),
                ('osm_id', models.CharField(help_text="OpenStreetMap'den alınan benzersiz kimlik.", max_length=50, unique=True, verbose_name='OSM ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('mahalle', models.ForeignKey(help_text='Mahalle seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='adalar', to='ortak.mahalle', verbose_name='Mahalle')),
            ],
            options={
                'verbose_name': 'Ada',
                'verbose_name_plural': 'Adalar',
                'db_table': '"ortak"."adalar"',
                'ordering': ['mahalle__ilce__il__ad', 'mahalle__ilce__ad', 'mahalle__ad', 'ada_no'],
            },
        ),
    ]
