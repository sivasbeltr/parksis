# Generated by Django 5.2.1 on 2025-06-10 12:09

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parkbahce', '0013_viewparklardonatilarhabitatlar_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GorevTipi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('ad', models.CharField(help_text='Görev tipini giriniz (örn. Sulama, Çim Biçme, Bakım).', max_length=50, unique=True, verbose_name='Görev Tipi')),
                ('deger', models.SlugField(blank=True, help_text='Görev tipi için benzersiz bir değer giriniz.', null=True, unique=True, verbose_name='Değer')),
                ('aciklama', models.TextField(blank=True, help_text='Görev tipi hakkında açıklama giriniz.', null=True, verbose_name='Açıklama')),
                ('varsayilan_sure', models.DurationField(blank=True, help_text='Görev tipinin varsayılan tamamlanma süresi (örn. 2 hours).', null=True, verbose_name='Varsayılan Süre')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Görev Tipi',
                'verbose_name_plural': 'Görev Tipleri',
                'db_table': '"parkbahce"."gorev_tipleri"',
                'ordering': ['ad'],
            },
        ),
        migrations.CreateModel(
            name='Gorev',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('baslik', models.CharField(help_text='Görevin başlığını giriniz.', max_length=100, verbose_name='Başlık')),
                ('aciklama', models.TextField(blank=True, help_text='Görev hakkında detaylı açıklama giriniz.', null=True, verbose_name='Açıklama')),
                ('baslangic_tarihi', models.DateTimeField(blank=True, help_text='Görevin başlangıç tarihini giriniz.', null=True, verbose_name='Başlangıç Tarihi')),
                ('bitis_tarihi', models.DateTimeField(blank=True, help_text='Görevin bitiş tarihini giriniz.', null=True, verbose_name='Bitiş Tarihi')),
                ('durum', models.CharField(choices=[('planlanmis', 'Planlanmış'), ('devam_ediyor', 'Devam Ediyor'), ('tamamlandi', 'Tamamlandı'), ('iptal', 'İptal'), ('gecikmis', 'Gecikmiş')], default='planlanmis', help_text='Görevin durumunu seçiniz.', max_length=20, verbose_name='Durum')),
                ('oncelik', models.CharField(choices=[('dusuk', 'Düşük'), ('normal', 'Normal'), ('yuksek', 'Yüksek'), ('acil', 'Acil')], default='normal', help_text='Görevin öncelik seviyesini seçiniz.', max_length=20, verbose_name='Öncelik')),
                ('tekrar_tipi', models.CharField(choices=[('yok', 'Tekrar Yok'), ('gunluk', 'Günlük'), ('haftalik', 'Haftalık'), ('aylik', 'Aylık'), ('yillik', 'Yıllık')], default='yok', help_text='Görevin tekrarlanma sıklığını seçiniz.', max_length=20, verbose_name='Tekrarlama Tipi')),
                ('tekrar_son_tarihi', models.DateTimeField(blank=True, help_text='Tekrarlayan görevlerin biteceği tarih.', null=True, verbose_name='Tekrar Son Tarihi')),
                ('extra_data', models.JSONField(blank=True, help_text='Görev ile ilgili ekstra verileri JSON formatında giriniz.', null=True, verbose_name='Ekstra Veri')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('olusturan', models.ForeignKey(blank=True, help_text='Görevi oluşturan kullanıcıyı seçiniz.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='olusturulan_gorevler', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('park', models.ForeignKey(help_text='Görevin yapılacağı parkı seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='gorevler', to='parkbahce.park', verbose_name='Park')),
                ('gorev_tipi', models.ForeignKey(blank=True, help_text='Görev tipini seçiniz.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gorevler', to='istakip.gorevtipi', verbose_name='Görev Tipi')),
            ],
            options={
                'verbose_name': 'Görev',
                'verbose_name_plural': 'Görevler',
                'db_table': '"parkbahce"."gorevler"',
                'ordering': ['-baslangic_tarihi', 'park__ad'],
            },
        ),
        migrations.CreateModel(
            name='GorevDenetimKaydi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('islem_tipi', models.CharField(help_text='Yapılan işlemin tipini giriniz (örn. Oluşturma, Güncelleme, Durum Değişikliği).', max_length=50, verbose_name='İşlem Tipi')),
                ('aciklama', models.TextField(blank=True, help_text='İşlem hakkında detaylı açıklama giriniz.', null=True, verbose_name='Açıklama')),
                ('islem_tarihi', models.DateTimeField(auto_now_add=True, help_text='İşlemin yapıldığı tarih.', verbose_name='İşlem Tarihi')),
                ('extra_data', models.JSONField(blank=True, help_text='Denetim kaydı ile ilgili ekstra verileri JSON formatında giriniz.', null=True, verbose_name='Ekstra Veri')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('gorev', models.ForeignKey(help_text='Denetim kaydının bağlı olduğu görevi seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='denetim_kayitlari', to='istakip.gorev', verbose_name='Görev')),
                ('yapan', models.ForeignKey(blank=True, help_text='İşlemi yapan kullanıcıyı seçiniz.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gorev_denetim_kayitlari', to=settings.AUTH_USER_MODEL, verbose_name='Yapan')),
            ],
            options={
                'verbose_name': 'Görev Denetim Kaydı',
                'verbose_name_plural': 'Görev Denetim Kayıtları',
                'db_table': '"parkbahce"."gorev_denetim_kayitlari"',
                'ordering': ['-islem_tarihi'],
            },
        ),
        migrations.CreateModel(
            name='GorevTamamlamaResim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('resim', models.ImageField(help_text='Görev tamamlandığında çekilen resmi yükleyiniz.', upload_to='gorev_tamamlama_resimler/%Y/%m/%d/', verbose_name='Tamamlama Resmi')),
                ('aciklama', models.CharField(blank=True, help_text='Tamamlama resmi ile ilgili açıklama giriniz.', max_length=200, null=True, verbose_name='Resim Açıklaması')),
                ('konum', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Resmin çekildiği konum.', null=True, srid=5256, verbose_name='Resim Konumu')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('gorev', models.ForeignKey(help_text='Tamamlanan görevi seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='tamamlama_resimleri', to='istakip.gorev', verbose_name='Görev')),
            ],
            options={
                'verbose_name': 'Görev Tamamlama Resmi',
                'verbose_name_plural': 'Görev Tamamlama Resimleri',
                'db_table': '"parkbahce"."gorev_tamamlama_resimleri"',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GunlukKontrol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('kontrol_tarihi', models.DateTimeField(auto_now_add=True, help_text='Kontrol tarihini giriniz.', verbose_name='Kontrol Tarihi')),
                ('kontrol_tipi', models.CharField(choices=[('rutin', 'Rutin Kontrol'), ('ozel', 'Özel Kontrol'), ('denetim', 'Denetim')], default='rutin', help_text='Kontrol tipini seçiniz.', max_length=20, verbose_name='Kontrol Tipi')),
                ('durum', models.CharField(choices=[('sorun_yok', 'Sorun Yok'), ('sorun_var', 'Sorun Var'), ('acil', 'Acil Müdahale Gerekli'), ('gozden_gecirildi', 'Gözden Geçirildi'), ('ise_donusturuldu', 'İşe Dönüştürüldü')], help_text='Parkın durumunu seçiniz.', max_length=20, verbose_name='Durum')),
                ('aciklama', models.TextField(blank=True, help_text='Sorun varsa veya ek bilgi gerekiyorsa açıklamayı giriniz.', null=True, verbose_name='Açıklama')),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Kontrolün yapıldığı konum.', null=True, srid=5256, verbose_name='Konum')),
                ('extra_data', models.JSONField(blank=True, help_text='Kontrol ile ilgili ekstra verileri JSON formatında giriniz.', null=True, verbose_name='Ekstra Veri')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('park', models.ForeignKey(help_text='Kontrol yapılan parkı seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='gunluk_kontroller', to='parkbahce.park', verbose_name='Park')),
            ],
            options={
                'verbose_name': 'Günlük Kontrol',
                'verbose_name_plural': 'Günlük Kontroller',
                'db_table': '"parkbahce"."gunluk_kontroller"',
                'ordering': ['-kontrol_tarihi', 'park__ad'],
            },
        ),
        migrations.AddField(
            model_name='gorev',
            name='gunluk_kontrol',
            field=models.ForeignKey(blank=True, help_text='Görevle ilişkili günlük kontrolü seçiniz.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ilgili_gorevler', to='istakip.gunlukkontrol', verbose_name='İlgili Günlük Kontrol'),
        ),
        migrations.CreateModel(
            name='KontrolResim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('resim', models.ImageField(help_text='Sorunla ilgili resmi yükleyiniz.', upload_to='kontrol_resimler/%Y/%m/%d/', verbose_name='Resim')),
                ('aciklama', models.CharField(blank=True, help_text='Resimle ilgili kısa bir açıklama giriniz.', max_length=200, null=True, verbose_name='Resim Açıklaması')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('gunluk_kontrol', models.ForeignKey(help_text='Resmin bağlı olduğu günlük kontrolü seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='resimler', to='istakip.gunlukkontrol', verbose_name='Günlük Kontrol')),
            ],
            options={
                'verbose_name': 'Kontrol Resmi',
                'verbose_name_plural': 'Kontrol Resimleri',
                'db_table': '"parkbahce"."kontrol_resimler"',
            },
        ),
        migrations.CreateModel(
            name='Personel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('ad', models.CharField(help_text='Personelin adını ve soyadını giriniz.', max_length=100, verbose_name='Ad Soyad')),
                ('telefon', models.CharField(blank=True, help_text='Personelin telefon numarasını giriniz.', max_length=15, null=True, verbose_name='Telefon')),
                ('eposta', models.EmailField(blank=True, help_text='Personelin e-posta adresini giriniz.', max_length=254, null=True, verbose_name='E-posta')),
                ('pozisyon', models.CharField(blank=True, help_text='Personelin pozisyonunu giriniz (örn. Park Görevlisi, Yönetici).', max_length=50, null=True, verbose_name='Pozisyon')),
                ('aktif', models.BooleanField(default=True, help_text='Personelin aktif olup olmadığını belirtir.', verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('user', models.ForeignKey(help_text='Personel ile ilişkili kullanıcıyı seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='personeller', to=settings.AUTH_USER_MODEL, verbose_name='Kullanıcı')),
            ],
            options={
                'verbose_name': 'Personel',
                'verbose_name_plural': 'Personeller',
                'db_table': '"parkbahce"."personeller"',
                'ordering': ['ad'],
            },
        ),
        migrations.AddField(
            model_name='gunlukkontrol',
            name='personel',
            field=models.ForeignKey(help_text='Kontrolü yapan personeli seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='gunluk_kontroller', to='istakip.personel', verbose_name='Personel'),
        ),
        migrations.CreateModel(
            name='GorevAtama',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('atama_tarihi', models.DateTimeField(auto_now_add=True, help_text='Personelin göreve atandığı tarih.', verbose_name='Atama Tarihi')),
                ('gorev_rolu', models.CharField(blank=True, help_text='Personelin görevdeki rolünü giriniz (örn. Yürütücü, Denetçi).', max_length=50, null=True, verbose_name='Görev Rolü')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('gorev', models.ForeignKey(help_text='Personelin atandığı görevi seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='atamalar', to='istakip.gorev', verbose_name='Görev')),
                ('personel', models.ForeignKey(help_text='Göreve atanan personeli seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='atamalar', to='istakip.personel', verbose_name='Personel')),
            ],
            options={
                'verbose_name': 'Görev Atama',
                'verbose_name_plural': 'Görev Atamaları',
                'db_table': '"parkbahce"."gorev_atamalar"',
                'ordering': ['gorev__baslik', 'personel__ad'],
            },
        ),
        migrations.CreateModel(
            name='GorevAsama',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('ad', models.CharField(help_text='Aşama adını giriniz (örn. Hazırlık, Uygulama, Kontrol).', max_length=50, verbose_name='Aşama Adı')),
                ('aciklama', models.TextField(blank=True, help_text='Aşama hakkında detaylı açıklama giriniz.', null=True, verbose_name='Açıklama')),
                ('durum', models.CharField(choices=[('baslamadi', 'Başlamadı'), ('devam_ediyor', 'Devam Ediyor'), ('tamamlandi', 'Tamamlandı')], default='baslamadi', help_text='Aşamanın durumunu seçiniz.', max_length=20, verbose_name='Durum')),
                ('baslangic_tarihi', models.DateTimeField(blank=True, help_text='Aşamanın başlangıç tarihini giriniz.', null=True, verbose_name='Başlangıç Tarihi')),
                ('tamamlanma_tarihi', models.DateTimeField(blank=True, help_text='Aşamanın tamamlanma tarihini giriniz.', null=True, verbose_name='Tamamlanma Tarihi')),
                ('resim', models.ImageField(blank=True, help_text='Aşama ilerlemesi ile ilgili resmi yükleyiniz.', null=True, upload_to='asama_resimler/%Y/%m/%d/', verbose_name='Aşama Resmi')),
                ('konum', django.contrib.gis.db.models.fields.PointField(blank=True, help_text='Resmin çekildiği konum.', null=True, srid=5256, verbose_name='Resim Konumu')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('gorev', models.ForeignKey(help_text='Aşamanın bağlı olduğu görevi seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='asamalar', to='istakip.gorev', verbose_name='Görev')),
                ('sorumlu', models.ForeignKey(blank=True, help_text='Aşamadan sorumlu personeli seçiniz.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sorumlu_asamalar', to='istakip.personel', verbose_name='Sorumlu Personel')),
            ],
            options={
                'verbose_name': 'Görev Aşaması',
                'verbose_name_plural': 'Görev Aşamaları',
                'db_table': '"parkbahce"."gorev_asamalari"',
                'ordering': ['gorev__baslik', 'created_at'],
            },
        ),
        migrations.AddField(
            model_name='gorev',
            name='atanan_personeller',
            field=models.ManyToManyField(help_text='Göreve atanan personelleri seçiniz.', related_name='atanan_gorevler', through='istakip.GorevAtama', to='istakip.personel', verbose_name='Atanan Personeller'),
        ),
        migrations.CreateModel(
            name='ParkPersonel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('atama_tarihi', models.DateTimeField(auto_now_add=True, help_text='Personelin parka atandığı tarih.', verbose_name='Atama Tarihi')),
                ('gorev_aciklama', models.TextField(blank=True, help_text='Personelin parkta üstlendiği görevlerin açıklaması.', null=True, verbose_name='Görev Açıklaması')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Güncellenme Tarihi')),
                ('park', models.ForeignKey(help_text='Personelin görevli olduğu parkı seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='park_personeller', to='parkbahce.park', verbose_name='Park')),
                ('personel', models.ForeignKey(help_text='Görevli personeli seçiniz.', on_delete=django.db.models.deletion.CASCADE, related_name='park_personeller', to='istakip.personel', verbose_name='Personel')),
            ],
            options={
                'verbose_name': 'Park Personel',
                'verbose_name_plural': 'Park Personeller',
                'db_table': '"parkbahce"."park_personeller"',
                'ordering': ['park__ad', 'personel__ad'],
                'unique_together': {('park', 'personel')},
            },
        ),
        migrations.AddIndex(
            model_name='gunlukkontrol',
            index=models.Index(fields=['park', 'kontrol_tarihi'], name='gunluk_kont_park_id_6d7f7d_idx'),
        ),
        migrations.AddIndex(
            model_name='gunlukkontrol',
            index=models.Index(fields=['durum'], name='gunluk_kont_durum_39d1c7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gorevatama',
            unique_together={('gorev', 'personel')},
        ),
        migrations.AddIndex(
            model_name='gorev',
            index=models.Index(fields=['park', 'durum'], name='gorevler_park_id_01faae_idx'),
        ),
        migrations.AddIndex(
            model_name='gorev',
            index=models.Index(fields=['gorev_tipi', 'oncelik'], name='gorevler_gorev_t_a9c9b7_idx'),
        ),
    ]
